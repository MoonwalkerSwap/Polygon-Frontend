{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","components/BalanceInput/BalanceInput.tsx","hooks/useApproveConfirmTransaction.ts","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","hooks/useTokenBalance.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","utils/getTimePeriods.ts","hooks/useAllowance.ts"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","scale","variant","as","Link","to","Title","Heading","attrs","size","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","useState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","BigNumber","totalAmount","startBlockNum","endBlockNum","state","setState","useBlock","blockNumber","contract","useIfoContract","useEffect","fetchProgress","a","makeBatchRequest","methods","call","parseInt","totalBlocks","POLYGON_BLOCK_TIME","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","Item","Display","IfoCardDetails","publicIfoData","isOpen","setIsOpen","description","pdustToBurn","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","onClick","endIcon","color","my","href","target","rel","ml","style","display","times","toFixed","margin","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","account","useWeb3React","currencyContract","useERC20","allowance","useIfoAllowance","fetchIfoData","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","setPendingTx","addUserContributedAmount","plus","setIsClaimed","StyledBalanceInput","Box","input","radii","default","Input","UIKitInput","TokenSymbol","BalanceInput","title","max","symbol","onChange","onSelectMax","value","props","maxDisplay","justifyContent","fontSize","num","placeholder","mr","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","actions","type","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","ContributeModal","currency","onDismiss","setValue","raisingTokenContract","balance","getBalanceNumber","useTokenBalance","valueWithTokenDecimals","pow","options","response","currentAllowance","gt","approve","ethers","constants","MaxUint256","send","from","deposit","toString","maxWidth","e","currentTarget","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","undefined","maximumFractionDigits","Contribute","contributedBalance","toastSuccess","useModal","onPresentContributeModal","bold","textTransform","flex","pr","disabled","MetaLabel","children","minHeight","BalanceInUsd","token","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","refundedBalance","eq","tokenSymbol","tokenDecimals","rewardBalance","handleClaim","harvest","isLoading","spin","mt","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","Details","Countdown","IfoCardTime","block","countdownToUse","timeUntil","getTimePeriods","suffix","days","hours","minutes","StyledIfoCard","Card","IfoCard","id","Ribbon","variantColor","text","getRibbonComponent","ribbon","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","PdustContract","getPdustContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","web3","useWeb3","fetchBalance","getERC20Contract","balanceOf","res","fastRefresh","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","Math","floor","useLotteryAllowance","setAllowance","pdustContract","usePdust","fetchAllowance","getLotteryAddress","tokenContract","spenderAddress","dependency","fetch"],"mappings":"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","file":"static/js/7.87876e0f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'polygon-moonwalkerswap-uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'polygon-moonwalkerswap-uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farming Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import BigNumber from 'bignumber.js'\nimport { POLYGON_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { useBlock } from 'state/hooks'\nimport { useIfoContract } from 'hooks/useContract'\nimport { useEffect, useState } from 'react'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface PublicIfoState {\n  status: IfoStatus\n  blocksRemaining: number\n  secondsUntilStart: number\n  progress: number\n  secondsUntilEnd: number\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  startBlockNum: number\n  endBlockNum: number\n}\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\n  // making the UI change to an inaccurate status\n  if (currentBlock === 0) {\n    return 'idle'\n  }\n\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return 'idle'\n}\n\n/**\n * Gets all public data of an IFO\n */\nconst useGetPublicIfoData = (ifo: Ifo) => {\n  const { address, releaseBlockNumber } = ifo\n  const [state, setState] = useState<PublicIfoState>({\n    status: 'idle',\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 5,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { blockNumber: currentBlock } = useBlock()\n  const contract = useIfoContract(address)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\n        contract.methods.startBlock().call,\n        contract.methods.endBlock().call,\n        contract.methods.raisingAmount().call,\n        contract.methods.totalAmount().call,\n      ])) as [string, string, string, string]\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        secondsUntilEnd: blocksRemaining * POLYGON_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * POLYGON_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\n\n  return state\n}\n\nexport default useGetPublicIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from 'polygon-moonwalkerswap-uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  LinkExternal,\n  Link,\n  Box,\n  CardFooter,\n  Button,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from 'polygon-moonwalkerswap-uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Ifo } from 'config/constants/types'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\n\nexport interface IfoCardDetailsProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { description, pdustToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\n  const { raisingAmount, totalAmount } = publicIfoData\n  const handleToggle = () => setIsOpen(!isOpen)\n\n  return (\n    <CardFooter>\n      <Button\n        variant=\"text\"\n        onClick={handleToggle}\n        width=\"100%\"\n        endIcon={\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\n        }\n      >\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Button>\n      {isOpen && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" my=\"24px\">\n            {description}\n          </Text>\n          <Box mb=\"24px\">\n            <Item>\n              <Display>{TranslateString(582, 'Launch Time')}</Display>\n              <Text>\n                {launchDate},\n                <Link\n                  href=\"https://www.timeanddate.com/worldclock/uk/london\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                  ml=\"4px\"\n                  style={{ display: 'inline' }}\n                >\n                  {launchTime}\n                </Link>\n              </Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(584, 'For Sale')}</Display>\n              <Text>{saleAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n              <Text>{raiseAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(586, 'pDUST to burn (USD)')}</Display>\n              <Text>{pdustToBurn}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n              <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n            </Item>\n          </Box>\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n            {TranslateString(412, 'View project site')}\n          </LinkExternal>\n        </>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default IfoCardDetails\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Ifo } from 'config/constants/types'\nimport { useERC20, useIfoContract } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface UserInfo {\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface WalletIfoState {\n  isPendingTx: boolean\n  offeringTokenBalance: BigNumber\n  refundingAmount: BigNumber\n  userInfo: UserInfo\n}\n\n/**\n * Gets all data from an IFO related to a wallet\n */\nconst useGetWalletIfoData = (ifo: Ifo) => {\n  const [state, setState] = useState<WalletIfoState>({\n    isPendingTx: false,\n    offeringTokenBalance: new BigNumber(0),\n    refundingAmount: new BigNumber(0),\n    userInfo: {\n      amount: new BigNumber(0),\n      claimed: false,\n    },\n  })\n\n  const { address, currencyAddress } = ifo\n  const { isPendingTx } = state\n\n  const { account } = useWeb3React()\n  const contract = useIfoContract(address)\n  const currencyContract = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\n\n  const setPendingTx = (status: boolean) =>\n    setState((prevState) => ({\n      ...prevState,\n      isPendingTx: status,\n    }))\n\n  const addUserContributedAmount = (amount: BigNumber) => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        amount: prevState.userInfo.amount.plus(amount),\n      },\n    }))\n  }\n\n  const setIsClaimed = () => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        claimed: true,\n      },\n    }))\n  }\n\n  useEffect(() => {\n    const fetchIfoData = async () => {\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\n        contract.methods.getOfferingAmount(account).call,\n        contract.methods.userInfo(account).call,\n        contract.methods.getRefundingAmount(account).call,\n      ])) as [string, UserInfo, string]\n\n      setState((prevState) => ({\n        ...prevState,\n        offeringTokenBalance: new BigNumber(offeringAmount),\n        refundingAmount: new BigNumber(refundingAmount),\n        userInfo: {\n          amount: new BigNumber(userInfoResponse.amount),\n          claimed: userInfoResponse.claimed,\n        },\n      }))\n    }\n\n    if (account) {\n      fetchIfoData()\n    }\n  }, [account, contract, setState])\n\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\n}\n\nexport default useGetWalletIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from 'polygon-moonwalkerswap-uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface BalanceInputProps extends BoxProps {\n  title: string\n  max: number\n  symbol: string\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  onSelectMax?: () => void\n}\n\nconst StyledBalanceInput = styled(Box)`\n  background: ${({ theme }) => theme.colors.input};\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 8px 16px;\n`\n\nconst Input = styled(UIKitInput)`\n  box-shadow: none;\n  flex: 1;\n`\n\nconst TokenSymbol = styled(Text)`\n  max-width: 120px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n`\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\n  const TranslateString = useI18n()\n  const maxDisplay = max.toFixed(6)\n\n  return (\n    <StyledBalanceInput {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text fontSize=\"14px\">{title}</Text>\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        {onSelectMax && (\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n        )}\n        <TokenSymbol title={symbol}>{symbol}</TokenSymbol>\n      </Flex>\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, LinkExternal, Box, Text } from 'polygon-moonwalkerswap-uikit'\nimport BalanceInput from 'components/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <Box maxWidth=\"400px\">\n        <BalanceInput\n          title={TranslateString(999, 'Contribute')}\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => setValue(balance.toString())}\n          mb=\"24px\"\n        />\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\",\n          )}\n        </Text>\n        <LinkExternal\n          href=\"https://polygon-swap.moonwalker.network/add/WMATIC/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\"\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Text } from 'polygon-moonwalkerswap-uikit'\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\nimport useI18n from 'hooks/useI18n'\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo['amount']\n  totalAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\n  const TranslateString = useI18n()\n  const percentOfUserContribution = userAmount.div(totalAmount).times(100).toNumber()\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {TranslateString(999, `${percentofUserDisplay}% of total`, { num: percentofUserDisplay })}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { Box, Button, Flex, Text, useModal } from 'polygon-moonwalkerswap-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\nimport ContributeModal from './ContributeModal'\nimport PercentageOfTotal from './PercentageOfTotal'\n\ninterface ContributeProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: boolean\n  publicIfoData: PublicIfoState\n  addUserContributedAmount: (amount: BigNumber) => void\n}\nconst Contribute: React.FC<ContributeProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  publicIfoData,\n  addUserContributedAmount,\n}) => {\n  const { currency, currencyAddress } = ifo\n  const { totalAmount } = publicIfoData\n  const TranslateString = useI18n()\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const { toastSuccess } = useToast()\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} pDUST-MATIC LP tokens to this IFO!`)\n    addUserContributedAmount(amount)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      currency={currency}\n      contract={contract}\n      currencyAddress={currencyAddress}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  return (\n    <Box>\n      <Flex mb=\"4px\">\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n          PDUST-MATIC LP\n        </Text>\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n          Committed\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Box style={{ flex: 1 }} pr=\"8px\">\n          <Text bold fontSize=\"20px\">\n            {contributedBalance.toFixed(4)}\n          </Text>\n        </Box>\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\n          {TranslateString(999, 'Contribute')}\n        </Button>\n      </Flex>\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\n    </Box>\n  )\n}\n\nexport default Contribute\n","import React from 'react'\nimport { Box, BoxProps, Text } from 'polygon-moonwalkerswap-uikit'\n\ntype MetaLabel = BoxProps\n\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Box minHeight=\"18px\" {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\">\n        {children}\n      </Text>\n    </Box>\n  )\n}\n\nexport default MetaLabel\n","import React from 'react'\nimport { useGetApiPrice } from 'state/hooks'\nimport MetaLabel from './MetaLabel'\n\ninterface BalanceInUsdProps {\n  token: string\n  balance: number\n}\n\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\n  const priceInUsd = useGetApiPrice(token)\n  const hasBalance = !!priceInUsd && balance > 0\n  const total = priceInUsd * balance\n\n  return (\n    <MetaLabel>\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n    </MetaLabel>\n  )\n}\n\nexport default BalanceInUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { AutoRenewIcon, Box, Button, Flex, Text } from 'polygon-moonwalkerswap-uikit'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport { UserInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\nimport BalanceInUsd from './BalanceInUsd'\nimport MetaLabel from './MetaLabel'\n\ninterface ClaimProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: WalletIfoState['isPendingTx']\n  setPendingTx: (status: boolean) => void\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\n  refundingAmount: WalletIfoState['refundingAmount']\n  setIsClaimed: () => void\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`\n\nconst DISPLAY_DECIMALS = 4\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const didContribute = userInfo.amount.gt(0)\n  const canClaim = !userInfo.claimed\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\n  const { tokenSymbol, tokenDecimals } = ifo\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true)\n      await contract.methods.harvest().send({ from: account })\n      setIsClaimed()\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\n    } catch (error) {\n      toastError('Error')\n      console.error(error)\n    } finally {\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              LP Tokens\n            </Text>\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n              Committed\n            </Text>\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          <MetaLabel>\n            {canClaim\n              ? TranslateString(999, `${refundedBalance} to reclaim`, { num: refundedBalance })\n              : TranslateString(999, `${refundedBalance} reclaimed`, { num: refundedBalance })}\n          </MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {tokenSymbol}\n            </Text>\n            {!canClaim ? (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                Claimed\n              </Text>\n            ) : (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim}\n          width=\"100%\"\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\n        </Button>\n      ) : (\n        <Button disabled width=\"100%\" mb=\"24px\">\n          {TranslateString(999, 'Nothing to Claim')}\n        </Button>\n      )}\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\n    </>\n  )\n}\n\nexport default Claim\n","import React from 'react'\nimport { Box, Skeleton } from 'polygon-moonwalkerswap-uikit'\n\nconst ActiveSkeleton = () => (\n  <Box>\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\n    <Skeleton height=\"48px\" mb=\"2px\" />\n    <Skeleton height=\"19px\" width=\"15%\" />\n  </Box>\n)\n\nexport default ActiveSkeleton\n","import React from 'react'\nimport { Box, Flex, Skeleton } from 'polygon-moonwalkerswap-uikit'\n\nconst InactiveSkeleton = () => (\n  <>\n    <Flex mb=\"24px\">\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n    </Flex>\n    <Skeleton height=\"48px\" mb=\"24px\" />\n    <Skeleton height=\"48px\" mt=\"4px\" />\n  </>\n)\n\nexport default InactiveSkeleton\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo } from 'config/constants/types'\nimport UnlockButton from 'components/UnlockButton'\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\nimport Contribute from './Contribute'\nimport Claim from './Claim'\nimport ActiveSkeleton from './ActiveSkeleton'\nimport InactiveSkeleton from './InactiveSkeleton'\n\nexport interface Props {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\n  const {\n    isPendingTx,\n    offeringTokenBalance,\n    refundingAmount,\n    userInfo,\n    contract,\n    setPendingTx,\n    addUserContributedAmount,\n    setIsClaimed,\n  } = useGetWalletIfoData(ifo)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <UnlockButton />\n  }\n\n  return (\n    <>\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\n      {publicIfoData.status === 'live' && (\n        <Contribute\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          publicIfoData={publicIfoData}\n          addUserContributedAmount={addUserContributedAmount}\n        />\n      )}\n      {publicIfoData.status === 'finished' && (\n        <Claim\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          setPendingTx={setPendingTx}\n          offeringTokenBalance={offeringTokenBalance}\n          refundingAmount={refundingAmount}\n          setIsClaimed={setIsClaimed}\n        />\n      )}\n    </>\n  )\n}\n\nexport default IfoCardActions\n","import React from 'react'\nimport { Box, Progress } from 'polygon-moonwalkerswap-uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <Box mb=\"16px\">\n      <Progress primaryStep={progress} />\n    </Box>\n  )\n}\n\nexport default IfoCardProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link } from 'polygon-moonwalkerswap-uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (status === 'idle') {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\n        {TranslateString(656, 'Loading...')}\n      </Flex>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://polygonscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon } from 'polygon-moonwalkerswap-uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, name, subTitle } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\n          <>\n            <IfoCardProgress progress={publicIfoData.progress} />\n            <IfoCardTime\n              status={publicIfoData.status}\n              secondsUntilStart={publicIfoData.secondsUntilStart}\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\n              block={publicIfoData.startBlockNum}\n            />\n          </>\n        )}\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\n      </CardBody>\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from 'polygon-moonwalkerswap-uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  align-items: start;\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from 'polygon-moonwalkerswap-uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy pDUST and MATIC tokens')}</li>\n            <li>{TranslateString(598, 'Get pDUST-MATIC LP tokens by adding DUST and MATIC liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://polygon-swap.moonwalker.network/#/swap\" mr=\"16px\">\n              {TranslateString(1060, 'Buy pDUST')}\n            </LinkExternal>\n            <LinkExternal href=\"https://polygon-swap.moonwalker.network/add/MATIC/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\">\n              {TranslateString(1062, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your pDUST-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.moonwalker.network/core-products\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with Polygon MoonWalkerSwap,Polygon Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on Polygon.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://form.jotform.com/212606130120031\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getERC20Contract, getPdustContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getERC20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const PdustContract = getPdustContract()\n      const supply = await PdustContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getERC20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { usePdust } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const pdustContract = usePdust()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await pdustContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, pdustContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n"],"sourceRoot":""}